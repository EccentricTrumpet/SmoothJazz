syntax = "proto3";
package grpc.testing;


service Shengji {
  // Creates a new game.
  rpc CreateGame(CreateGameRequest) returns (Game);

  // Enters the room if the player has not entered the room yet. Streams back
  // the game whenever game state changes.
  rpc EnterRoom(EnterRoomRequest) returns (stream Game);

  // Plays a hand or tries to claim trump suit.
  rpc PlayHand(PlayHandRequest) returns (PlayHandResponse);

  rpc AddAIPlayer(AddAIPlayerRequest) returns (AddAIPlayerResponse);
}

// Request and response protos
message AddAIPlayerRequest {
  string game_id = 1;
}

message AddAIPlayerResponse {
  string player_name = 1;
}

message EnterRoomRequest {
  string game_id = 1;
  string player_id = 2;
}

message CreateGameRequest {
  string player_id = 1;
}

message PlayHandRequest{
  string player_id = 1;
  string game_id = 2;

  enum Intention {
    // Claims trump suit - this is only valid while cards are being served.
    CLAIM_TRUMP = 0;
    // Plays a hand.
    PLAY_HAND = 1;
  }

  Intention intention = 3;
  Hand hand = 4;
}

message PlayHandResponse{
  // TODO: Ideally FE only needs to handle RPC failure. Use a boolean here for
  // now.
  bool success = 1;
  string error_message = 2;
}

// Player-specific state
message PlayerState {
  // Cards you have on your hand
  Hand cards_on_hand = 1;

  // Cards you have in your discard pile
  Hand discard_pile = 2;

  // You current score
  int32 score = 3;
}

message Game {
  // Game ID.
  string game_id = 1;

  // Creator of the game.
  string creator_player_id = 2;

  // Dealer of this round. The dealer is the first player to play a hand and
  // has RO access to kitty.
  string dealer_player_id = 3;

  // Player who needs to play a hand.
  string next_turn_player_id = 4;

  // Player who wins the current round.
  string current_round_winner_player_id = 5;

  // All player states. Private states will be redacted by the server (e.g.
  // other players' hand cards)
  map<string, PlayerState> player_states = 6;

  // Kitty/hidden hand. This is only visible to the dealer.
  Hand kitty = 7;

  // Current trump suit. If trump_suit is SUIT_UNDEFINED, then we're playing a
  // game without trump suit.
  Card.Suit trump_suit = 8; 

  // Trump number.
  Card.Num trump_num = 9; 
}

message Card {
  enum Suit {
    SUIT_UNDEFINED = 0;
    HEATS = 1;
    SPADES = 2;
    CLUBS = 3;
    DIAMONDS = 4;

    SMALL_JOKER = 5;
    BIG_JOKER = 6;
  }

  enum Num {
    NUM_UNDEFINED = 0;
    TWO = 1;
    THREE = 2;
    FOUR = 3;
    FIVE = 4;
    SIX = 5;
    SEVEN = 6;
    EIGHT = 7;
    NINE = 8;
    TEN = 9;
    JACK = 10;
    QUEEN = 11;
    KING = 12;
    ACE = 13;
  }

  Suit suit = 1;
  Num num = 2;
}

message Hand {
  repeated Card cards = 1;
}
