// Copyright 2020 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package grpc.testing;

service Shengji {
  rpc CreateGame(CreateGameRequest) returns (Game);

  rpc StartGame(StartGameRequest) returns (Game);

  rpc StopGame(StopGameRequest) returns (Game);

  rpc StreamGame(StreamGameRequest) returns (stream Game);

  rpc PlayGame(PlayGameRequest) returns (Game);
}

message StreamGameRequest {
  string game_id = 1;
}

message CreateGameRequest {
  string user_id = 1;
}

message StartGameRequest {
  string user_id = 1;
  string game_id = 2;
}

message StopGameRequest {
  string user_id = 1;
  string game_id = 2;
}

message PlayGameRequest{
  string user_id = 1;
  string game_id = 2;
  repeated Card hand = 3;
}

message Card {
  message RegularCard {
    enum Suit {
      UNDEFINED = 0;
      HEATS = 1;
      SPADES = 2;
      CLUBS = 3;
      DIAMONDS = 4;
    }
  
    enum Num {
      ACE = 0;
      TWO = 1;
      THREE = 2;
      FOUR = 3;
      FIVE = 4;
      SIX = 5;
      SEVEN = 6;
      EIGHT = 7;
      NINE = 8;
      TEN = 9;
      JACK = 10;
      QUEEN = 11;
      KING = 12;
    }
  
    Suit suit = 1;
    Num num = 2;
  }
  
  oneof ActualCard {
    RegularCard card = 1;
    bool is_small_joker = 2;
    bool is_big_joker = 3;
  }
}

message Game {
  // Game metadata
  string game_id = 1;
  string creator_user_id = 2;
  map<string, string> teams = 3;

  // Game state
  GameState state = 4;
}

message GameState {
  int32 game_move_count = 1;
}
